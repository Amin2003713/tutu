@page "/Profile/Address"
@using Application.User.UserAddress.Responses
                         
@layout ProfileLayout

<MudPaper Elevation="1" Class="checkout-section shadow-around">
    <MudToolBar Class="justify-space-between" Dense="@true" WrapContent="false">
        <MudText Typo="Typo.h6" Class="mb-2" Align="Align.Start">
            نشانی‌ها
        </MudText> 
        <MudIconButton Icon="@Icons.Material.Outlined.Add"/>
    </MudToolBar>
        <div class="checkout-section-content">
            <MudRadioGroup
                T="long"
                bind-Value="SelectedAddress"
                ValueChanged="Callback">
                <div class="row mx-0">
                    <MudVirtualize Items="@Addresses">

                        <AddressInfo
                            Elevation="@(context.ActiveAddress ? 2 : 1)"
                            Address="context"/>
                    </MudVirtualize>
                </div>
            </MudRadioGroup>
        </div>
</MudPaper>

@code {

    public long SelectedAddress { get; set; }


// Handle add new address button
    private void OpenAddAddressModal()
    {
// Open modal to add a new address
    }

    private ICollection<AddressDto>? Addresses { get; set; }



    protected override async Task OnInitializedAsync()
    {
            var result =await AddressService.GetCurrentUserAddresses(await UserInfo.Id());

            if (result!.IsSuccess)
            {
                SnackBar.Add(result.MetaData.Message, Severity.Error);
                return;
            }
            if (result.Data is null)
            {
                SnackBar.Add("یافت نشد.", Severity.Warning);
                return;
            }
            Addresses = result.Data;
    }


    private async Task OnAddressChanged(long arg)
    {
    }

    private async Task Callback(long arg)
    {
        SnackBar.Add(arg.ToString(), Severity.Info);
    }

}