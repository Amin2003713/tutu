@using Application.User.Users.CommandAndQueries
@using Domain.User.Users
@using Microsoft.AspNetCore.Http.Internal
@using MyShop.Ui.Commen.Controles.Inputs
<MudPaper Class="shadow-around p-3">
    <EditForm OnValidSubmit="OnValidSubmit" Model="UserDto">
        <DataAnnotationsValidator/>
        <MudGrid>
            <!-- Name Input -->
            <MudItem xs="12" lg="6" Class="mb-5">
                <MudText Typo="Typo.subtitle2" Class="text-muted mb-3">نام:</MudText>
                <MudTextField @bind-Value="UserDto.Name" Variant="Variant.Outlined" Class="font-weight-bold"/>
            </MudItem>

            <!-- Family Name Input -->
            <MudItem xs="12" lg="6" Class="mb-5">
                <MudText Typo="Typo.subtitle2" Class="text-muted mb-3">نام خانوادگی:</MudText>
                <MudTextField @bind-Value="UserDto.Family" Variant="Variant.Outlined" Class="font-weight-bold"/>
            </MudItem>

            <!-- Phone Number Input -->
            <MudItem xs="12" lg="6" Class="mb-5">
                <MudText Typo="Typo.subtitle2" Class="text-muted mb-3">شماره تلفن همراه:</MudText>
                <MudTextField @bind-Value="UserDto.PhoneNumber" Variant="Variant.Outlined" Class="font-weight-bold"/>
            </MudItem>

            <!-- Email Input -->
            <MudItem xs="12" lg="6" Class="mb-5">
                <MudText Typo="Typo.subtitle2" Class="text-muted mb-3">پست الکترونیک:</MudText>
                <MudTextField @bind-Value="UserDto.Email" Variant="Variant.Outlined" Class="font-weight-bold"/>
            </MudItem>

            <!-- Password Input -->
            <MudItem xs="12" lg="6" Class="mb-5">
                <MudText Typo="Typo.subtitle2" Class="text-muted mb-3">رمز عبور:</MudText>
                <MudTextField @bind-Value="UserDto.Password" Variant="Variant.Outlined" InputType="InputType.Password"
                              Class="font-weight-bold"/>
            </MudItem>

            @* <!-- Avatar File Upload --> *@
            @* <MudItem xs="12" lg="6" Class="mb-5"> *@
            @*     <MudText Typo="Typo.subtitle2" Class="text-muted mb-3">انتخاب آواتار:</MudText> *@
            @*     <ImageUploader @ref="ImageUploader"/> *@
            @* </MudItem> *@

            <!-- Gender Radio -->
            <MudItem xs="12" lg="6" Class="mb-5">
                <MudText Typo="Typo.subtitle2" Class="text-muted mb-3">جنسیت:</MudText>
                <MudSelect @bind-Value="UserDto.Gender" Clearable="true" Variant="Variant.Outlined">
                    <MudSelectItem Value="@(Gender.Male)">
                        آقا
                    </MudSelectItem>
                    <MudSelectItem Value="@(Gender.Famele)">
                        خانم
                    </MudSelectItem>
                    <MudSelectItem Value="@(Gender.None)">
                        نمیدانم
                    </MudSelectItem>
                </MudSelect>
            </MudItem>


            <!-- Submit Button -->
            <MudItem xs="12" Class="text-right">
                <MudButton Color="Color.Warning" Variant="Variant.Filled" StartIcon="Icons.Material.Filled.Save" ButtonType="ButtonType.Submit">
                    ذخیره تغییرات
                </MudButton>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudPaper>

@code{
    private IReadOnlyList<IBrowserFile> _formFile { get; set; }

    [Parameter] public UserDto UserDto { get; set; } = new();

    private ImageUploader ImageUploader { get; set; }

    [Parameter] public EventCallback<bool> IsEdit { get; set; }

    private bool UserGender { get; set; } = true;


    private async Task OnValidSubmit(EditContext obj)
    {
        var result = await UserService.EditUser(new EditUserCommand
        {
            Gender = UserDto.Gender,
            Avatar = await ImageUploader.ConvertBrowserFileToFormFile(),
            PhoneNumber = UserDto.PhoneNumber,
            Email = UserDto.Email,
            Family = UserDto.Family,
            Name = UserDto.Name
        });

        if (!result!.IsSuccess)
            SnackBar.Add(result.MetaData.Message, Severity.Error);

        var userInfo = await UserService.GetCurrentUser();

        if (!userInfo!.IsSuccess)
            SnackBar.Add(result.MetaData.Message, Severity.Error);

        await Local.UpdateAsync(UserConstants.UserLocation, userInfo);

        await IsEdit.InvokeAsync(false);
    }


    private void OnChange(Gender gender)
    {
        UserDto.Gender = gender;
    }

}